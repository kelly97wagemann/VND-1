//
// Generated file, do not edit! Created by nedtool 5.4 from veins/modules/messages/ECM.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __ECM_M_H
#define __ECM_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/base/utils/Coord.h"
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>veins/modules/messages/ECM.msg:9</tt> by nedtool.
 * <pre>
 * packet EmergentContextMsg extends WaveShortMessage
 * {
 *     Coord senderPos;
 *     //	coord senderSpeed;
 *     double accVehSpeed;
 *     string accidentLane;
 *     int accLInd;
 *     string senderid;
 *     simtime_t sendingTime;
 *     int SeqNum = 0;
 *     //	Emergency vehicle Forwarder
 *     string emergVID;
 *     string emergManeuvLane;
 *     double emergDrivSpeed;
 *     Coord emergVehCurPos;
 *     Coord emergStartPos;
 *     Coord EmergEndPos;
 *     bool isForwarded = false;
 * 
 * }
 * </pre>
 */
class EmergentContextMsg : public ::WaveShortMessage
{
  protected:
    Coord senderPos;
    double accVehSpeed;
    ::omnetpp::opp_string accidentLane;
    int accLInd;
    ::omnetpp::opp_string senderid;
    ::omnetpp::simtime_t sendingTime;
    int SeqNum;
    ::omnetpp::opp_string emergVID;
    ::omnetpp::opp_string emergManeuvLane;
    double emergDrivSpeed;
    Coord emergVehCurPos;
    Coord emergStartPos;
    Coord EmergEndPos;
    bool isForwarded;

  private:
    void copy(const EmergentContextMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EmergentContextMsg&);

  public:
    EmergentContextMsg(const char *name=nullptr, short kind=0);
    EmergentContextMsg(const EmergentContextMsg& other);
    virtual ~EmergentContextMsg();
    EmergentContextMsg& operator=(const EmergentContextMsg& other);
    virtual EmergentContextMsg *dup() const override {return new EmergentContextMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual Coord& getSenderPos();
    virtual const Coord& getSenderPos() const {return const_cast<EmergentContextMsg*>(this)->getSenderPos();}
    virtual void setSenderPos(const Coord& senderPos);
    virtual double getAccVehSpeed() const;
    virtual void setAccVehSpeed(double accVehSpeed);
    virtual const char * getAccidentLane() const;
    virtual void setAccidentLane(const char * accidentLane);
    virtual int getAccLInd() const;
    virtual void setAccLInd(int accLInd);
    virtual const char * getSenderid() const;
    virtual void setSenderid(const char * senderid);
    virtual ::omnetpp::simtime_t getSendingTime() const;
    virtual void setSendingTime(::omnetpp::simtime_t sendingTime);
    virtual int getSeqNum() const;
    virtual void setSeqNum(int SeqNum);
    virtual const char * getEmergVID() const;
    virtual void setEmergVID(const char * emergVID);
    virtual const char * getEmergManeuvLane() const;
    virtual void setEmergManeuvLane(const char * emergManeuvLane);
    virtual double getEmergDrivSpeed() const;
    virtual void setEmergDrivSpeed(double emergDrivSpeed);
    virtual Coord& getEmergVehCurPos();
    virtual const Coord& getEmergVehCurPos() const {return const_cast<EmergentContextMsg*>(this)->getEmergVehCurPos();}
    virtual void setEmergVehCurPos(const Coord& emergVehCurPos);
    virtual Coord& getEmergStartPos();
    virtual const Coord& getEmergStartPos() const {return const_cast<EmergentContextMsg*>(this)->getEmergStartPos();}
    virtual void setEmergStartPos(const Coord& emergStartPos);
    virtual Coord& getEmergEndPos();
    virtual const Coord& getEmergEndPos() const {return const_cast<EmergentContextMsg*>(this)->getEmergEndPos();}
    virtual void setEmergEndPos(const Coord& EmergEndPos);
    virtual bool getIsForwarded() const;
    virtual void setIsForwarded(bool isForwarded);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const EmergentContextMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, EmergentContextMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ECM_M_H

